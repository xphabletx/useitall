import 'package:flutter/material.dart';

import '../helpers/database_helper.dart';
import 'profile_screen.dart';

class IconScreen extends StatefulWidget {
  final String name;
  final bool isOver18;
  final List<String> allergies;
  final List<String> dietPreferences;
  final bool isMain;

  const IconScreen({
    Key? key,
    required this.name,
    required this.isOver18,
    required this.allergies,
    required this.dietPreferences,
    required this.isMain,
  }) : super(key: key);

  @override
  _IconScreenState createState() => _IconScreenState();
}

class _IconScreenState extends State<IconScreen> {
  late String _profileIcon = 'üçè';  // Default emoji

  final List<String> _foodEmojis = [
    'üçè', 'üçé', 'üçê', 'üçä', 'üçã', 'üçå', 'üçâ', 'üçá', 'üçì', 'ü´ê', 'üçà', 'üçí', 'üçë', 'ü•≠', 'üçç', 'ü••', 'ü•ù', 'üçÖ', 'üçÜ', 'ü•ë', 'ü•¶', 'ü•¨', 'ü•í', 'üå∂', 'ü´ë', 'üåΩ', 'ü•ï', 'ü´í', 'üßÑ', 'üßÖ', 'ü•î', 'üç†', 'ü•ê', 'ü•Ø', 'üçû', 'ü•ñ', 'ü•®', 'üßÄ', 'ü•ö', 'üç≥', 'üßà', 'ü•û', 'üßá', 'ü•ì', 'ü•©', 'üçó', 'üçñ', 'ü¶¥', 'üå≠', 'üçî', 'üçü', 'üçï', 'üåÆ', 'üåØ', 'ü´î', 'ü•ô', 'üßÜ', 'ü•ö', 'üç≥', 'üßÄ', 'ü•ó', 'üçø', 'ü•´', 'üç±', 'üç≤', 'üçú', 'üçù', 'üçõ', 'üç£', 'üç§', 'üçô', 'üçö', 'üçò', 'üç•', 'ü•ü', 'ü•†', 'ü•°', 'üç¢', 'üçß', 'üç®', 'üç¶', 'ü•ß', 'üßÅ', 'üç∞', 'üéÇ', 'üçÆ', 'üç¨', 'üç≠', 'üç´', 'üçø', 'üç©', 'üç™', 'üç∫', 'üçª', 'ü•Ç', 'üç∑', 'ü•É', 'üç∏', 'üçπ', 'üçæ', 'üç∂', 'üçµ', 'ü´ñ', '‚òï', 'üßÉ', 'ü•§', 'üßã', 'üßâ', 'üçΩ', 'üç¥', 'ü•Ñ'
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Select Profile Icon'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            const Text(
              'Select Profile Icon',
              style: TextStyle(
                fontSize: 20.0,
                fontWeight: FontWeight.bold,
              ),
            ),
            Expanded(
              child: GridView.count(
                shrinkWrap: true,
                crossAxisCount: 5,
                children: _foodEmojis.map((emoji) {
                  return GestureDetector(
                    onTap: () {
                      setState(() {
                        _profileIcon = emoji;
                      });
                    },
                    child: Container(
                      padding: const EdgeInsets.all(8.0),
                      child: Center(
                        child: Text(
                          emoji,
                          style: const TextStyle(
                            fontSize: 36.0,
                          ),
                        ),
                      ),
                      decoration: BoxDecoration(
                        border: Border.all(
                          color: _profileIcon == emoji
                              ? Colors.grey[800]!
                              : Colors.transparent,
                          width: 2.0,
                        ),
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                    ),
                  );
                }).toList(),
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: _submit,
              child: Text('Welcome ${widget.name} $_profileIcon. Let\'s get started!'),
            ),
          ],
        ),
      ),
    );
  }

  void _submit() async {
    final profile = {
      'name': widget.name,
      'isOver18': widget.isOver18 ? 1 : 0,
      'allergies': widget.allergies.join(','),
      'dietPreferences': widget.dietPreferences.join(','),
      'profileIcon': _profileIcon,
      'isMain': widget.isMain ? 1 : 0, // Add the isMain field
    };

    await DatabaseHelper.instance.insertProfile(profile);

    ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Profile Created')));

    Navigator.pushReplacement(
      context,
      MaterialPageRoute(builder: (context) => ProfileScreen()),
    );
  }
}